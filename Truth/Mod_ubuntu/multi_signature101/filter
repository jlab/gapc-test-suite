Iteration: 0
Grammar bill types:
#INT (int)
formula ([Sig answer]) = NULL |
   [Sig answer] add(Sig answer< [Sig answer] >, char< NULL >, Sig answer< [Sig answer] >, ) |
   NULL |
   [Sig answer] mult(Sig answer< [Sig answer] >, char< NULL >, Sig answer< [Sig answer] >, ) |
   	# h [Sig answer]


number (int) = int |
   

plus ([char]) = [char] CHAR(char-< char >-, ) |
   

times ([char]) = [char] CHAR(char-< char >-, ) |
   


Iteration: 1
Error: 
  formula = number with maxsize(23) |
  ^-----^
filter:87.3-9: Type [Sig answer] is not compatible with

  formula = number with maxsize(23) |
            ^----^
filter:87.13-18: data type int.
Error: 
  formula = number with maxsize(23) |
  ^-----^
filter:87.3-9: Type [Sig answer] is not compatible with

            number with maxsize(42) |
            ^----^
filter:89.13-18: data type int.
Grammar bill types:
#INT (int)
formula ([Sig answer]) = int |
   [Sig answer] add(Sig answer< [Sig answer] >, char< [char] >, Sig answer< [Sig answer] >, ) |
   int |
   [Sig answer] mult(Sig answer< [Sig answer] >, char< [char] >, Sig answer< [Sig answer] >, ) |
   	# h [Sig answer]


number (int) = int |
   

plus ([char]) = [char] CHAR(char-< char >-, ) |
   

times ([char]) = [char] CHAR(char-< char >-, ) |
   


Return: 0
