Grammar Pal types:
#CHAR (char)
#SEQ1 (int)
pal ([string]) = [string] match(char< char >, string< [string] >, char< char >, ) |
   [string] empty(int< int >, ) |
   

sl ([string]) = [string] skipl(char< char >, string< [string] >, ) |
   [string] |
   

sr ([string]) = [string] skipr(string< [string] >, char< char >, ) |
   [string] |
   


List elimination iteration: 0

Grammar Pal types:
#CHAR (char)
#SEQ1 (int)
pal ([string]) = [string] match(char< char >, string< [string] >, char< char >, ) |
   string empty(int< int >, ) |
   

sl ([string]) = [string] skipl(char< char >, string< [string] >, ) |
   [string] |
   

sr ([string]) = [string] skipr(string< [string] >, char< char >, ) |
   [string] |
   


List elimination iteration: 1

Grammar Pal types:
#CHAR (char)
#SEQ1 (int)
pal ([string]) = [string] match(char< char >, string< [string] >, char< char >, ) |
   string empty(int< int >, ) |
   

sl ([string]) = [string] skipl(char< char >, string< [string] >, ) |
   [string] |
   

sr ([string]) = [string] skipr(string< [string] >, char< char >, ) |
   [string] |
   


List elimination iteration: 2

Grammar Pal types:
#CHAR (char)
#SEQ1 (int)
pal ([string]) = [string] match(char< char >, string< [string] >, char< char >, ) |
   string empty(int< int >, ) |
   

sl ([string]) = [string] skipl(char< char >, string< [string] >, ) |
   [string] |
   

sr ([string]) = [string] skipr(string< [string] >, char< char >, ) |
   [string] |
   


List elimination iteration: 3

Grammar Pal types:
#CHAR (char)
#SEQ1 (int)
pal ([string]) = [string] match(char< char >, string< [string] >, char< char >, ) |
   string empty(int< int >, ) |
   

sl ([string]) = [string] skipl(char< char >, string< [string] >, ) |
   [string] |
   

sr ([string]) = [string] skipr(string< [string] >, char< char >, ) |
   [string] |
   


